sudo: required
latex: false
warnings_are_errors: false
os:
  - linux
  - osx
compiler:
  - clang

matrix:
 allow_failures:
   - r: devel
   - r: 3.2
   - r: 3.3
   - r: 3.4
   - r: 3.7
   


dist: trusty

language: r
cache: packages
warnings_are_errors: true
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
dist: trusty
addons:
  apt:
    packages:
    - libcurl4-openssl-dev
    - libxml2-dev
    - libfftw3-dev
    - libgsl0-dev
    - libgsl0ldbl
os:
- linux
- osx
osx_image: xcode9
r:
- 3.3
- 3.4
- 3.5
- release
- devel
matrix:
  allow_failures:
  - r: devel
env:
  global:
  - R_BUILD_ARGS="--no-manual"
  - R_CHECK_ARGS="--as-cran --install-args=--build"
  - RGL_USE_NULL=TRUE
  - WARNINGS_ARE_ERRORS=1
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
  - R_REMOTES_NO_ERRORS_FROM_WARNINGS=true

before_install:
  - ulimit -n 2048
  - export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH}
  - export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
  - wget -O antsr_travis.sh http://bit.ly/antsr_travis_sh
  - chmod +x antsr_travis.sh
  - . ./antsr_travis.sh
  - rm antsr_travis.sh
  - v8_install
  - Rscript -e "install.packages(c('Rcpp', 'RcppEigen'), type = 'source', repos=c(CRAN='https://cran.rstudio.com'))"
  - Rscript -e "install.packages( c('magrittr','testthat','knitr','rmarkdown','covr','devtools', 'desc',  'remotes', 'colormap' ), repos=c(CRAN='https://cran.rstudio.com'))"
  - Rscript -e 'install.packages("rsvd")'
  - Rscript -e 'install.packages("magic")'
  - Rscript -e 'install.packages("ggplot2")'
  - Rscript -e 'install.packages("psych")'
  - Rscript -e 'install.packages("randomForest")'
  - Rscript -e "install.packages(c('lmPerm', 'nparcomp', 'RcppArmadillo', 'sandwitch', 'TH.data', 'zoo'), type = 'source', repos=c(CRAN='https://cran.rstudio.com'))"
  - cat DESCRIPTION
  
after_failure:
- dump_logs
before_deploy:
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then PKG_TARBALL=$(ls -1t *.tgz | head -n 1);
  PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tgz/_'"R${rver}"'.tgz/'` ; mv ${PKG_TARBALL}
  ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}" ; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then PKG_TARBALL=$(ls -1t *.tar.gz | head -n
  1); PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tar.gz/_'"R${rver}"'.tar.gz/'`
  ; mv ${PKG_TARBALL} ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}"
  ; fi
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then rm -f *.tar.gz; fi
deploy:
  provider: releases
  skip_cleanup: true
  file_glob: true
  overwrite: true
  file: "${PACKAGE_NAME}*.t*gz"
  on:
    tags: true
  api-key:
    secure: CVGvdaKz8WFbeFwcvWTUo8nekUFrrl+dfZcV5lgX86V1CGW1Ac0lsR9oqKtYdJNxjEWTGa+zjvuB44ye4PR1PhEVAU/FM0BS62Qr5tfBHh0nWQoO7MWB7NYR4OtyNLgd8ImlK6yAWq5yQFFlsG0J3ZZLiw0D2WvVFUUmMtUX1YNE8OQb7Ficq82Y6KCBO1CzBj3LHMFNoRXkX2b9Mb+3kef6QtC/PJYCIGprnAvDtWUhBOc3+9zavBC4dQ7tQQW2MAhQPEQwtAjNqD9UB3GaBKxKgdfENqNbtNoYWAi4+ZHwQTW3WjOF4iHw5ZVfr7pkDlHsAUivfL94aArAfiVfYGA9M0WugKscKPnfbWBeSSnNbgDFj/xLNy5Cc9l+EoEE3bJUsgPiTYKrzsL90efHxjLaIfH9POt43PJMDb606yLCaxW9tso5pcJZ3VX8epAV6lIvql+XB2WyCmYm8UOcvU4P2ZaVSbz3T6rsuA4HMExA4mxQ77OV+mpx6DAZOkHOayefpbjSKphSTo78BuqCDGMHyuDYtsJ469rJZ37CZPy+sGO+wUfAXaGCSVZLtry8o7kwM2xUYh5USGTsCVMNEdSdc2fQKrgICuM1K7ZsF6BSdfZSJyKTNlCFAfhHMqPiYw98JmLdPHgIlRGpV/fjdTM5+/YWXRx8Yj2IXGhsMFQ=
after_deploy:
- echo "${PROJECT_NAME}" | grep -q "releases"; if [[ $? -eq 0 ]]; then run_coverage="false";
  else run_coverage=; fi;
- if [[ "${PACKAGE_NAME}" != "ANTsR" && "${PACKAGE_NAME}" != "ITKR" && "${PACKAGE_NAME}"
  != "ANTsRCore" && -z "${run_coverage}" ]]; then if [[ "${TRAVIS_R_VERSION_STRING}"
  = "release" ]]; then Rscript -e 'covr::coveralls(type = "all", quiet = FALSE)' ;
  fi fi
