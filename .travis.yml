sudo: required
latex: false
warnings_are_errors: false
os:
  - linux
  - osx
compiler:
  - clang

matrix:
 allow_failures:
   - os: osx
   - r: devel
   - r: 3.7


dist: trusty

language: r
cache: packages
warnings_are_errors: true
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
dist: trusty
addons:
  apt:
    packages:
    - libfftw3-dev
    - libgsl0-dev
    - libgsl0ldbl
os:
- linux
- osx
osx_image: xcode9
r:
  - 3.2
  - 3.3
  - 3.4
  - 3.5
  - 3.6
  - 3.7
  - release
  - devel

env:
  global:
  - R_BUILD_ARGS="--no-manual"
  - R_CHECK_ARGS="--as-cran --install-args=--build"
  - RGL_USE_NULL=TRUE
  - WARNINGS_ARE_ERRORS=1
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
  - R_REMOTES_NO_ERRORS_FROM_WARNINGS=true
before_install:
  - ulimit -n 2048
  - export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH}
  - export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
  - wget -O antsr_travis.sh http://bit.ly/antsr_travis_sh
  - chmod +x antsr_travis.sh
  - . ./antsr_travis.sh
  - rm antsr_travis.sh
  - v8_install
  - Rscript -e "install.packages(c('Rcpp', 'RcppEigen'), type = 'source', repos=c(CRAN='https://cran.rstudio.com'))"
  - Rscript -e "install.packages( c('magrittr','testthat','knitr','rmarkdown','covr','devtools', 'desc',  'remotes', 'colormap' ), repos=c(CRAN='https://cran.rstudio.com'))"
  - Rscript -e 'install.packages("rsvd")'
  - Rscript -e 'install.packages("magic")'
  - Rscript -e 'install.packages("ggplot2")'
  - Rscript -e 'install.packages("psych")'
  - Rscript -e 'install.packages("randomForest")'
  - Rscript -e "install.packages(c('lmPerm', 'multcomp', 'nparcomp', 'RcppArmadillo', 'sandwitch', 'TH.data', 'zoo'), type = 'source', repos=c(CRAN='https://cran.rstudio.com'))"
  - cat DESCRIPTION
  
after_failure:
- dump_logs
before_deploy:
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then PKG_TARBALL=$(ls -1t *.tgz | head -n 1);
  PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tgz/_'"R${rver}"'.tgz/'` ; mv ${PKG_TARBALL}
  ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}" ; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then PKG_TARBALL=$(ls -1t *.tar.gz | head -n
  1); PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tar.gz/_'"R${rver}"'.tar.gz/'`
  ; mv ${PKG_TARBALL} ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}"
  ; fi
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then rm -f *.tar.gz; fi
deploy:
  provider: releases
  skip_cleanup: true
  file_glob: true
  file: "${PACKAGE_NAME}*.t*gz"
  on:
    tags: true
  api-key:
    secure: JV/lmBxXecvsNLXMDWGutqJXN3stXLew4Jh+X20C8dzJ0WHBVrKZRJXhaDo7OGmBijQ9PJM7UkGFpNNq0eUuiMxwddwDO0Hjd19Wf5GkxwEQXmZLZ56pMaPzCIebwz5AiHzVVwRixzVGMnwB+JIPuJSYccEhg6ppRe+OO+tZheVc+HQl5+JZWkPVjVfmrvXsUbfn9qRJkd5DJWn/Ju600xvFPTEoougFU7MnfHKOUxxl4NfVaK/YuAVak/YhOJtvbMGhk/jVx22zbdgu+qbYDUBzf9aIvMSKw0uTU/H+k9LxOnIYnu3zYuzeYfAE+nSM6HtXY/LvnkdsQacLksro+zakqfSUaQrBiikx6XaFcNRJE5f08Y0V7nWvTlfDNmgV9GJUvKHjcdAgXV5ZAxhC69YnyQ/fxO59mooNiplfO4Ip8WsrHqapJp4b8EVVIkRVQrJksFnALv0iHoDhYDBNsMMAtXUNI+ZDlOlLvJlcUEHLxE6w8KQi4sojQyE6Of6PaMGyOee+Qo0QGebXTqq5U4PQu5TaKLKIi7jXmXRe8lS01L5HD16cqgrByF81KczQ3Ttui75E/PAQgN33vhfnEEfPM5gYOhk5IJxtU6rYeoPTFVGV0znistJC2th87eJIqL8lWesyVnc312vBLrcHLMx6L8XIA8o0uqkpFJURn6Q=
after_deploy:
- if [[ "${PACKAGE_NAME}" != "ANTsR" && "${PACKAGE_NAME}" != "ITKR" && "${PACKAGE_NAME}"
  != "ANTsRCore" ]]; then if [[ "${TRAVIS_R_VERSION_STRING}" = "release" ]]; then
  Rscript -e 'covr::coveralls(type = "all", quiet = FALSE)' ; fi fi
