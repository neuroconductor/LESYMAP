% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/registerLesionToTemplate.R
\name{registerLesionToTemplate}
\alias{registerLesionToTemplate}
\title{registerLesionToTemplate}
\usage{
registerLesionToTemplate(subImg, subLesion, templateImg = NA,
  templateBrainMask = NA, templateRegMask = NA, skullStrip = T,
  typeofTransform = "SyNCC", outprefix = "", tstamp = "\%H:\%M:\%S",
  showInfo = T, ...)
}
\arguments{
\item{subImg}{antsImage or character filename of the anatomical
image of the subject. Typically this is a T1-weighted
MRI image, on which you drew the lesion map.}

\item{subLesion}{antsImage or character filename of the lesion map.
Typically you draw this manually or obtain it from
automated lesion segmentation software. You can try
our \href{https://github.com/dorianps/LINDA}{LINDA
toolbox} for an automated alternative. Yet, manual
drawing can be performed
\href{https://youtu.be/ZVmINdWk5R4}{quickly}
 and is preferred.}

\item{templateImg}{antsImage or filename of the anatomical template
image. This image should be with skull included.}

\item{templateBrainMask}{antsImage or filename of the template brain
mask. This mask is needed for skull-stripped registrations.}

\item{templateRegMask}{antsImage or filename of the template mask that includes
the skull but no face. Useful for improving the skull
stripping process.}

\item{skullStrip}{logical whether to remove the skull and perform
brain-on-brain registration.}

\item{typeofTransform}{an \code{antsRegistration} parameter that controls
the quality of registration. The default is \code{SyNCC}, which
probably is the most robust and takes long (1-2 hours maybe).
For faster registration you can try \code{SyN}.}

\item{outprefix}{character of the prefix where to save the output. If
this is set, most of images and transformations will be
saved at the specified path/prefix. The folder must exist or you
will get an error. It is passed without modification to
\code{antsRegistration}.}

\item{tstamp}{format of the timestamp when displaying info messages.}

\item{showInfo}{logical whether to show info messages or be completely
quiet. If you want also verbose registration messages,
please set \code{verbose=TRUE}.}

\item{...}{other arguments to pass to \code{antsRegistration}}
}
\value{
List of objects returned:
\itemize{
 \item\code{subImg} - subject\'s image in native space (after bias correction,
  denoising, skull stripping, etc.)
 \item\code{subLesion} - subject\'s lesion map in native space
 \item\code{subImgTemplate} - subject\'s image in template space
 \item\code{subLesionTemplate} - subject\'s lesion in template space
 \item\code{subRegMask} - registration mask in native space
 \item\code{templateImg} - the template used to register the subject
 \item\code{templateBrainMask} - the brain mask of the template image
 \item\code{subLesionTemplate} - the template mask with skull and no face
 \item\code{registration$inverse_subject2template} - transformation matrices subject to template
 \item\code{registration$forward_template2subject} - transformation matrices template to subject
}
}
\description{
Brings lesion maps in template space by registering the
subject\'s anatomical to the template and applying the
same transform to the lesion. To improve the registration
the anatomical image is bias corrected and denoised. In
addition, you can choose to skull-strip the image and run a
more careful registration brain-on-brain so that the skull
does not impact the registration in any way. Note, for technical
reasons the registration is performed counterintuitively by
moving the template on the subject, and not the subject on the
template. For this reason, to bring the subject in template space
we use the inverse transformation. Also note, at the moment ANTsR
does not produce an inverse affine transformation explicitly, both
forward and inverse affine transforms are identical. You can use ANTs
to compute the inverse, or tell ANTsR if you need to invert an affine
matrix applying the transformations (see \code{whichtoinvert} in
\code{\link[ANTsRCore]{antsApplyTransforms}}).
}
\examples{
\dontrun{
anatomical = '/mnt/c/User/dp/Desktop/Subject1_anat.nii.gz'
lesion = '/mnt/c/User/dp/Desktop/Subject1_les.nii.gz'
newles = registerLesionToTemplate(anatomical, lesion,
        outprefix = '/mnt/c/User/dp/Desktop/Subj1onTemplate_')
}

}
\author{
Dorian Pustina
}
